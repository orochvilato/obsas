# -*- coding: utf-8 -*-
# essayez quelque chose comme
def index():
    import tools
    import pymongo
    from sources.hatvp import declarations
    from sources.deputywatch import deputywatch
    from sources.acteurs_organes import andata
    from sources.scrutins import getScrutins
    
    andata['scrutins'] = [ s for s in mdb.scrutins.find() ]
    s_ids = [ s['scrutin_id'] for s in andata['scrutins'] ]
    scr = getScrutins(s_ids)

    # stockage des votes et des scrutins dans la base
    if scr['votes']:
        mdb.votes.create_index([('vote_id', pymongo.ASCENDING)], unique = True)
        mdb.votes.insert_many(scr['votes'])

    if scr['scrutins']:
        mdb.scrutins.create_index([('scrutin_id', pymongo.ASCENDING)], unique = True)
        mdb.scrutins.insert_many(scr['scrutins'])

    axejson = {'noms':[],'defs':{}}
    for axe,defs in axes:
        axe_items = [ (s[defs['key']],s[defs['label']]) for s in andata[defs['source']] ]
        axejson['noms'].append(axe)
        axejson['defs'][axe] = {'titre':defs['titre'],'hidechart':defs.get('hidechart',False),'field':defs['item_field'], 'compare':defs['item_compare'], 'items':sorted(list(set(axe_items)),key=lambda item:item[1])}

    return dict(d=len(declarations),e=len(deputywatch),a=andata.keys(),s=scr['scrutins'],s_ids=s_ids,axejson=axejson)
