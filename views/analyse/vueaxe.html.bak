<div class="row">
    <a class="waves-effect waves-teal btn-flat" id="showanalyse"><i class="fa fa-line-chart"></i></a>
    <a class="right" href="{{ = 'analyse?t='+tinyid }}"><i class="fa fa-link"></i></a>
    
</div>
<div class="row analyse" {{ if filterson=='0': }}style="display:none;"{{ pass }}>
     
     <div id="filtres" class="card blue-grey lighten-5">
            <div class="card-content" style="margin-top:12px;margin-bottom:5px;">
              <div class="row" style="margin-bottom:0px;">
                  <div class="input-field col s5">
                    <select id="filtresaxe" multiple>
                         <option value="" disabled {{ if filtresaxes=={}: }}selected{{ pass }}>Définir</option>
                         {{ for a in axes_choix: }}
                            <option value="{{ =a[0] }}" {{ if a[0] in filtresaxes.keys() and filtresaxes[a[0]]: }}selected{{ pass }}>{{ =a[1] }}</option>
                         {{ pass }}
                   </select>
                   <label>Filtres axes actifs</label>
                 </div><div class="input-field col s5">
                    <select id="filtresitem" multiple>
                         <option value="" disabled {{ if filtresitems=={}: }}selected{{ pass }}>Définir</option>
                         {{ for f in filtresitems_choix: }}
                            <option value="{{ =f[0] }}" {{ if f[0] in filtresitems.keys() and filtresitems[f[0]]: }}selected{{ pass }}>{{ =f[1] }}</option>
                         {{ pass }}
                   </select>
                   <label>Filtres éléments actifs</label>
                 </div><div class="col s2"><button id="filtrer">Filtrer</button></div>
              </div>
              <div class="row">
                {{ for f in filtresitems_choix: }}
                <div class="col s12 l6" id="filtreit_{{ =f[0] }}" style="padding-bottom:10px;{{ if not f[0] in filtresitems.keys():}}display:none;{{ pass}}">
                    
                        <label>{{ =f[1] }} <span id="f{{ =f[0] }}-min"></span>% à <span id="f{{ =f[0] }}-max"></span>%</label>
                        <p class="range-field" style="margin-top:10px;margin-bottom:10px;">
                        <div style="margin-left:10px;margin-right:10px;" class="pctslider" id="f{{ =f[0] }}" f="{{ =f[0] }}" {{ if f[0] in filtresitems.keys(): }} vmin={{ =filtresitems[f[0]][0] }} vmax={{ =filtresitems[f[0]][1] }} {{ pass }} min={{ =filtresitm[f[0]]['min'] }} max={{ =filtresitm[f[0]]['max'] }}> </div>
                    </p>
                </div>
                {{ pass }}
                {{ for a in axes_choix: }}
                    <div id="filtre_{{ =a[0] }}" class="col s12 l6 input-field filter" {{ if not a[0] in filtresaxes.keys():}} style="display:none;" {{ pass}}>
                        <select id="filtresel_{{ =a[0] }}" axe="{{ =a[0] }}" class="filtreaxe" multiple>
                            <option value="" disabled {{ if filtresaxes.get(a[0],None): }}selected{{ pass }}>Définir</option>
                            {{ for item in axes_values[a[0]]: }}
                               <option value="{{ =item['key'] }}" {{ if a[0] in filtresaxes.keys() and item['key'] in filtresaxes[a[0]]: }}selected{{ pass }}>{{ =item['label'] }}</option>
                            {{ pass }}
                        </select>
                        <label>{{ = a[1] }}</label>
                    </div>
                {{ pass }}
                </div>
           </div>
        </div>

</div>
<div class="row analyse"  {{ if filterson=='0': }}style="display:none;"{{ pass }}>
  <div class="card-panel blue-grey lighten-5">
      <div class="row">
      <div class="input-field col s12">
              <select id="axe" class="updateview">
                 {{ for a in axes_choix: }}
                    <option value="{{ =a[0] }}" {{ if axe==a[0]: }}selected{{ pass }}>{{ =a[1] }}</option>
                 {{ pass }}
                 </select>
                 <label>Votes par</label>
      </div>
      <div class="input-field col s4 m3">
           <select id="suffrages" class="updateview">
                 {{ for suf in suffrages_choix: }}
                    <option value="{{ =suf[0] }}" {{ if suffrages==suf[0]: }}selected{{ pass }}>{{ =suf[1] }}</option>
                 {{ pass }}
             </select>
             <label>Suffrages</label>
      </div>
      <div class="input-field col s4 m3">
             <select id="tri" class="updateview">
                 {{ for t in tris_choix: }}
                    <option value="{{ =t[0] }}" {{ if tri==t[0]: }}selected{{ pass }}>{{ =t[1] }}</option>
                 {{ pass }}
             </select>
             <label>Trier par</label>
      </div>
      <div class="col s4 m6">
              <i id="sens" class="small material-icons right" style="cursor: pointer;">swap_vert</i>
          </div>
      </div>
    </div>
  </div>
</div>
<div class="row">
   <div class="col s12">
       
     <h4 class="center">{{ = axes[axe]['titre'] }}</h4>
       <h5 class="center" style="font-size:1.3rem;">{{ for a in axes_choix: }}{{ if a[0] in filtresaxes.keys() and filtresaxes[a[0]]: }}<p>{{ =a[1] }} : <b>{{ =', '.join([ axes_dicts[a[0]][af] for af in filtresaxes[a[0]] ]) }}</b></p>{{ pass }}{{ pass }}</h5>
       <h5 class="center" style="font-size:1.3rem;">{{ for f in filtresitems_choix: }}{{ if f[0] in filtresitems.keys() and filtresitems[f[0]]: }}<p>{{ =f[1] }} : <b>de {{ =filtresitems[f[0]][0] }} % à {{ =filtresitems[f[0]][1] }} %</b></p>{{ pass }}{{ pass }}</h5>
         <h5 class="center">{{ =nbscrutins }} scrutin(s), {{ =nbdeputes }} député(s)</h5>
   </div>
</div>
<div id="{{ =axe }}" class="row">
  <input class="search" placeholder="Recherche">
  <ul  class="col s12 list">
    {{ import json }}
    {{ for i,item in enumerate(items): }}
    <li>
    <div class="card" style="background:#F0F0F0">
    <div class="card-content">
       <div class="row">
              {{ if ('G' in elements) and (len(items)<30): }}
          <div class="col s8 m6 offset-s2 offset-m3 l3">
             <canvas vals="{{ = json.dumps([ item['stats'][suffrages].get(pos,{'n':0})['n'] for pos in ['pour','contre','abstention','nonVotant','absent','voteem','votefi','autres']]) }}" class="itemchart"></canvas>
          </div>
          <div class="col s12 m12 l9">
              {{ elif ('P' in elements): }}
          <div class="col s8 m6 offset-s2 offset-m3 l3">
              
             <img src="http://www2.assemblee-nationale.fr/static/tribun/15/photos/{{ =item['key'][2:] }}.jpg" />
          </div>
          <div class="col s12 m12 l9">
              {{ else: }}
          <div class="col s12">
              {{ pass }}
              <span class="card-title" style="font-weight:500;margin-bottom:5px;"><i class="fa fa-filter itemfilter {{ if axe in filtresaxes.keys() and item['key'] in filtresaxes[axe]: }}filtered{{pass}}" axe="{{ =axe }}" item="{{ =item['key'] }}"></i><span class="slibelle">{{ if axe=='scrutin':}}<span class="left new resultvote {{ =item['resultpos'] }}">{{ ={'pour':'Pour','contre':'Contre','abstention':'Abstention'}[item['resultpos']] }}</span>  {{ pass }}{{ = item['label'] }}</span>
              {{ if axe=='depute': }}<span class="coul{{ =item['groupe_abrev'] }}-text" style="font-size:60%">({{ =item['groupe_libelle'] }})</span><span class="ranking right">{{ =i+1 }}</span>
              {{ elif axe=='dossierleg' or axe=='typescrutin': }}<span style="font-size:60%">({{ =sum(item['nb'].values()) / 577 }} scrutin(s))</span>
              {{ elif axe!='scrutin': }}<span style="font-size:60%">({{ =item['deputes'] }} députée(s))</span>{{ pass }}</span>
              {{ if axe=='depute':}}
                  <p style="margin-top:-5px;margin-bottom:5px;">{{ = "%s / %s / %s " % (item['region'],item['departement'],item['circo']) }} <br/>
                      <span>{{ = item['profession_libelleCourant'] }}</span><span style="margin-left:20px;">{{ ="%d ans" % (item['age']) }}</span></p>
              {{ pass }}
              <span><span style="font-weight:300;">Votes{{ if suffrages=='exprime' or suffrages=='fiemcpt': }} exprimés{{pass}}{{ if suffrages=='exprime': }} ({{ =item['votants']}}){{ pass}}</span>
              <span class='right' style="font-weight:300;">Participation</span></span>
              
                <span class="card-title">
                {{ for pos in ['pour','contre','abstention','nonVotant','absent','voteem','votefi','autres']: }}
                {{ stat = item['stats'][suffrages].get(pos,None) }}
                {{ if stat and (stat['pct']>0 or suffrages=='fiemcpt'): }}
                   <span title="{{ =stat['libelle']}}" class="{{ =stat['class'] }} {{ =pos }}-text">
                       <i class="fa fa-{{ =stat['icon'] }}"></i> {{ = stat['pct'] }}%{{ if nbscrutins: }} <span style="font-size:60%">({{ = stat['n' if (not axe in ['depute','scrutin','typescrutin','dossierleg'] ) else 'ntot'] }})</span>{{ pass }}
                   </span>
                {{ pass }}
                {{ pass }}
                   <span title="Participation" class="pctBig right"> {{ = item['participation'] }}%</span>
               </span>
               <div>
               {{ if nbscrutins==1: }}
                 {{ for cercle in item['cercles']: }}
                   <a class="vcircle {{ =cercle['position'] }}" title="{{ =cercle['nom']}}" href="acteurs/{{ = cercle['uid'] }}.html" ></a>
                 {{ pass }}
               {{ pass }}
               </div>
            </div>
        </div>
      
      </div>
    </div
  </div>
  </li>
  {{ pass }}
</ul>
</div>
<script>
    var axes = JSON.parse('{{ =XML(json.dumps(axes.keys()).replace("'",u"\\'")) }}');
    var filtresitm = JSON.parse('{{ =XML(json.dumps(filtresitm.keys()).replace("'",u"\\'")) }}');
    var sList = new List('{{ =axe }}',{ valueNames: ['slibelle']});
    var current_suffrages = "{{ =suffrages }}";
    var current_tri = "{{ =tri }}";
    var current_axe = "{{ =axe }}";
    var current_desc = {{ =desc }};
    var filterson= {{ =filterson }};
    {{ import json }}

    var current_filtresaxes = JSON.parse('{{ =XML(json.dumps(filtresaxes).replace("'",u"\\'")) }}');
    var current_filtresitems = JSON.parse('{{ =XML(json.dumps(filtresitems).replace("'",u"\\'")) }}');
    //var axes_values = JSON.parse('{{ =XML(axes_values) }}');
    var ajaxparams = { url: '{{=URL("vueaxe") }}', data: params, type: 'GET', dataType: 'html' }    
    $(".itemchart").each(function() {
        var ctx = $(this);
        var vals = ctx.attr('vals');
        var randomScalingFactor = function() {
         return Math.round(Math.random() * 100);
        };
        var data = JSON.parse(vals);
        
        var myChart = new Chart(ctx, {
         type: 'doughnut',
         data: {
             datasets: [{
                 data: data,
                 backgroundColor: [
                     "green",
                     "red",
                     "dodgerblue",
                     "grey",
                     "grey",
                     "rgba(255,192,0,1)",
                     "rgba(12,195,214,1)",
                     "grey",
                 ],
                 label: 'Dataset 1'
             }],
             labels:['Pour','Contre','Abstention','Non votant','Absent','EM-Compatibilité','FI-Compatibilité','Autres']

         },
         options: {
             responsive: true,
             legend: {
                 display: false
             },
             title: {
                 display: true,
                 text: 'Répartition par position de vote'
             },
             animation: {
                 animateScale: false,
                 animateRotate: false,
             },
             tooltips: {
                  callbacks: {
                    label: function(tooltipItem, data) {
                      var allData = data.datasets[tooltipItem.datasetIndex].data;
                      var tooltipLabel = data.labels[tooltipItem.index];
                      var tooltipData = allData[tooltipItem.index];
                      var total = 0;
                      for (var i in allData) {
                        total += allData[i];
                      }
                      var tooltipPercentage = Math.round((tooltipData / total) * 100);
                      return tooltipLabel + ': ' + tooltipData + ' (' + tooltipPercentage + '%)';
                    }
                  }
              }
         }
       });
    });
</script>
